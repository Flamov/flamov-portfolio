{"version":3,"sources":["js/menu.js"],"names":["body","document","timeout","menuOpen","bigBang","eventsAdded","canvas","querySelector","context","getContext","stars","offset","colours","getRandomInt","min","max","Math","floor","random","getRandomFloat","drawStar","x","y","radius","hue","sat","beginPath","arc","fillStyle","fill","generateStars","width","window","innerWidth","height","innerHeight","clearRect","overflowX","overflowY","density","i","length","moveStars","beta","gamma","offsetX","offsetY","forEach","star","addEvents","addEventListener","removeEvents","removeEventListener","event","preventDefault","clearTimeout","classList","add","setTimeout","remove"],"mappings":"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","file":"menu.js","sourceRoot":"../assets","sourcesContent":["const { body } = document;\nlet timeout; // Timeout for menu transition\nlet menuOpen = false; // Boolean for when the menu is open/closed\nlet bigBang = false; // Initialisation boolean if the canvas has been populated and rendered\nlet eventsAdded = false; // Boolean to attach/detach the 'deviceorientation' event listener\n\nconst canvas = document.querySelector('.js-stars');\nconst context = canvas.getContext('2d');\n\nlet stars = [];\nconst offset = 0.2;\nconst colours = [0, 60, 240];\n\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nconst getRandomFloat = (min, max) => Math.random() * (max - min) + min;\n\nconst drawStar = ({ x, y, radius, hue, sat }) => {\n  context.beginPath();\n  context.arc(x, y, radius, 0, 360);\n  context.fillStyle = `hsl(${hue}, ${sat}%, 88%)`;\n  context.fill();\n};\n\nconst generateStars = () => {\n  stars = [];\n\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  const { width, height } = canvas;\n\n  context.clearRect(0, 0, width, height);\n\n  const overflowX = width * offset;\n  const overflowY = height * offset;\n\n  const density = (width + overflowX) + (height + overflowY);\n\n  for (let i = 0; i <= density; i += 1) {\n    const x = getRandomInt(-overflowX, width + overflowX);\n    const y = getRandomInt(-overflowY, height + overflowY);\n\n    const radius = getRandomFloat(0.2, 1.5);\n    const hue = colours[getRandomInt(0, colours.length - 1)];\n    const sat = getRandomInt(50, 100);\n\n    stars[i] = { x, y, radius, hue, sat };\n    drawStar(stars[i]);\n  }\n};\n\nconst moveStars = ({ beta, gamma }) => {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  const offsetX = (beta * 15) - (canvas.width / 2);\n  const offsetY = (gamma * 15) - (canvas.height / 2);\n\n  stars.forEach(star => drawStar({\n    ...star,\n    x: star.x + (offsetX * 0.25) * (star.radius * 0.5),\n    y: star.y + (offsetY * 0.25) * (star.radius * 0.5),\n  }));\n};\n\nconst addEvents = () => {\n  if (!eventsAdded) {\n    window.addEventListener('deviceorientation', moveStars);\n    window.addEventListener('resize', generateStars);\n    eventsAdded = true;\n  }\n};\n\nconst removeEvents = () => {\n  if (eventsAdded) {\n    window.removeEventListener('deviceorientation', moveStars);\n    window.removeEventListener('resize', generateStars);\n    eventsAdded = false;\n  }\n};\n\nbody.querySelector('.js-menu').addEventListener('click', (event) => {\n  event.preventDefault();\n\n  clearTimeout(timeout);\n\n  if (!bigBang) {\n    bigBang = true;\n    generateStars();\n  }\n\n  addEvents();\n\n  body.classList.add('menu', 'position');\n  menuOpen = true;\n});\n\nbody.querySelector('.js-overlay').addEventListener('click', (event) => {\n  event.preventDefault();\n\n  // Todo: replace with CSS transition event listener\n  timeout = setTimeout(() => {\n    menuOpen = false;\n    removeEvents();\n    body.classList.remove('position');\n  }, 200);\n\n  body.classList.remove('menu');\n});\n\nwindow.addEventListener('resize', () => {\n  if (window.innerWidth <= 800 && menuOpen) {\n    generateStars();\n    addEvents();\n  } else {\n    removeEvents();\n  }\n});\n"]}