version: 2

jobs:
  build:
    docker:
      - image: circleci/node:12
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build assets
          command: |
            npm ls
            ls
            npm run assets:build
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ~/app/node_modules
      - persist_to_workspace:
          root: .
          paths: node_modules
  tests:
    docker:
      - image: circleci/node:12
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - run:
          name: Run tests
          command: npm run test:coverage
      - run:
          name: Upload coverage report to Code Climate
          command: ./cc-test-reporter after-build -t lcov --exit-code $?
      - store_test_results:
          path: reports
      - store_artifacts:
          path: coverage/lcov-report
  eslint:
    docker:
      - image: circleci/node:12
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Test JavaScript linting
          command: |
            mkdir -p reports/eslint
            npm run eslint:report
      - store_test_results:
          path: reports
  stylelint:
    docker:
      - image: circleci/node:12
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Test SCSS linting
          command: npm run stylelint
  deploy:
    docker:
      - image: circleci/node:12
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/app
      - run:
          name: Build Docker image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
            docker build . -t flamov/flamov-portfolio
            docker push flamov/flamov-portfolio
      - run:
          name: Deploy new image
          command: ssh -o StrictHostKeyChecking=no root@$SSH_IP "docker-compose up -d --no-deps -e NODE_ENV=$NODE_ENV -e NODE_HOST_URL=$NODE_HOST_URL -e NODE_MONGODB_URL=$NODE_MONGODB_URL -e MONGODB_AUTH_SOURCE=$MONGODB_AUTH_SOURCE -e NODE_MONGODB_USER=$NODE_MONGODB_USER -e NODE_MONGODB_PASS=$NODE_MONGODB_PASS  --build flamov/flamov-portfolio:latest"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - eslint:
          requires:
            - build
      - stylelint:
          requires:
            - build
      - deploy:
          requires:
            - tests
            - eslint
            - stylelint
          filters:
            branches:
              only: 
                - master
